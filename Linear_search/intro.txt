Linear Search
Linear search, also known as sequential search, is a straightforward algorithm for finding a target value within a list. It checks each element in the list sequentially until either the target value is found or the end of the list is reached.

Algorithm Steps:
    Start from the first element of the list.
    Compare the current element with the target value.
        If they are equal, the target is found and the algorithm terminates.
        If they are not equal, move to the next element in the list.
    Repeat step 2 until the end of the list is reached.

Advantages:
    -Simple and easy to implement.
    -Works for both sorted and unsorted lists.

Disadvantages:
    -Inefficient for large datasets, especially when compared to more optimized algorithms like binary search.

Applications:
    Linear search can be applied in situations where the data is unsorted or where efficiency is not a critical factor. It is commonly used for small datasets or in scenarios where a quick implementation is needed.

Time Complexity:
    Best Case: O(1)
    Average Case: O(n)
    Worst Case: O(n)

Space Complexity:
    O(1) (Constant space used for storing pointers and variables)

Note:
Linear search is a basic and intuitive algorithm. While it may not be the most efficient for large datasets, it can be the right choice for small lists or situations where simplicity is valued over speed.
